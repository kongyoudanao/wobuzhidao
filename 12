#define _CRT_SECURE_NO_WARNINGS 1

#include<stdio.h>
//void Reverse(int arr[],int sz)
//{
//	int left = 0;
//	int right = sz - 1;
//	while (left < right)
//	{
//		int tmp = arr[left];
//		arr[left] = arr[right];
//		arr[right] = tmp;
//		left++;
//		right--;
//
//	}
//}
//void print(int arr[],int sz)
//{
//	int i = 0;
//	for (i = 0;i < sz;)
//	{
//		printf("%d\n", arr[i]);
//		i++;
//	}
//}
//int main()
//{
//	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };
//	int brr = sizeof(arr);
//	int crr = sizeof(arr[0]);
//	printf("%d\n", sizeof(arr) / sizeof(arr[0]));
//	printf("%d\n", sizeof(arr));
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	Reverse(arr,sz);
//	print(arr,sz);
//	return 0;
//}
//int main()
//{
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	b = ++c, ++a, ++c;
//	printf("%d", b);
//	b += ++c + a;
//	printf("%d", b);
//	return 0;
//}
//int count_bit_one(int a)
//{
//	int count = 0;
//	while (a)
//	{
//		if (a % 2 == 1)
//		{
//			count++;
//		}
//		a = a / 2;
//	}
//	return count;
//}
//int count_bit_one(unsigned int a)
//{
//	int count = 0;
//	while (a)
//	{
//		if (a % 2 == 1)
//		{
//			count++;
//		}
//		a = a / 2;
//	}
//	return count;
//}
//int count_bit_one(unsigned int a)
//{
//	int count = 0;
//	int i = 0;
//	for (i = 0;i < 32;)
//	{
//		if (((a >> 1) & 1) == 1)
//		{
//			count++;
//		}
//	}
//	return count;
//}
//int count_bit_one(unsigned int a)
//{
//	int count = 0;
//	while (a)
//	{
//		a = a & (a - 1);
//		count++;
//	}
//	return count;
//}
//int main()
//{
//	int a = 0;
//	scanf("%d", &a);
//	int count = count_bit_one(a);
//	printf("count=%d\n", count);
//	return 0;
//}
//int get_diff_bit(int m, int n)
//{
//	int tmp = m ^ n;
//	int count = 0;
//		while (tmp)
//		{
//			tmp = tmp & (tmp - 1);
//			count++;
//		}
//		return count;
//}
//int main()
//{
//	int m = 0;
//	int n = 0;
//	scanf("%d%d", &m, &n);
//	int count = get_diff_bit(m, n);
//	printf("%d", count);
//	return 0;
//}
//void print(int m)
//{
//	int i = 0;
//	for (i = 31;i >= 1;)
//	{
//		printf("%d", (m >> i) & 1);
//		i -= 2;
//	}
//}
//void print(int m)
//{
//	int i = 0;
//	for (i = 30;i >= 0;)
//	{
//		printf("%d", (m >> i) & 1);
//		i -= 2;
//	}
//}
//int main()
//{
//	int m = 0;
//	scanf("%d", &m);
//	print(m);
//	return 0;
//}
//int print(int n)
//{
//	int i = 0;
//	for (i = 0;i <= n;i++)
//	{
//		int j = 0;
//		for (j = 0;j <= i;j++)
//		{
//			printf("%d*%d=%d", i, j, i * j);
//		}
//		printf("\n");
//	}
//}
//int main()
//{
//	int n = 0;
//	scanf("%d", n);
//	print(n);
//	return 0;
//}
//double Pow(int n, int k)
//{
//	if (k < 0)
//	{
//		return (1.0 / (Pow(n, -k)));
//	}
//	else if (k == 0)
//	{
//		return 1;
//	}
//	else
//		return n * Pow(n, k - 1);
//}
//int main()
//{
//	int n = 0;
//	int k = 0;
//	scanf("%d%d", &n, &k); 
//	double ret = Pow(n,k);
//	printf("%lf", ret);
//	return 0;
//}
