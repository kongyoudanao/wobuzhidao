#define _CRT_SECURE_NO_WARNINGS 1

#include<stdio.h>

//void test(char*b)
//{
//	
//	printf("%d\n", *b);
//
//}
//int main()
//{
//	int a[10] = { 0 };
//	char b[10] = { 0 };
//	test(b);
//	return 0;
//}
//int main()
//{
//	const char *a = "abcdef";
//	return 0;
//}
//int main()
//{
//	char arr1[] = "abcdef";
//	char arr2[] = "abcdef";
//	const char* p1 = "abcdef";    abcdef是常量字符串不能改变，在内存中就存有一个，所以怕p1==p2 都是指向abcdef的首地址。
//	const char* p2 = "abcdef";
//
//	//if (arr1 == arr2)//打印hehe   arr1是arr1首元素的地址   arr2是arr2首元素的地址   俩个数组的地址不相同 所以不相等。
//	//{
//	//	printf("haha\n");
//	//}
//	//else
//	//{
//	//	printf("hehe\n");
//	//}
//	return 0;
//}
//int main()
//{
//	int arr1[] = { 1,2,3,4,5 };
//	int arr2[] = { 2,3,4,5,6 };
//	int arr3[] = { 3,4,5,6,7 };
//	
//	int* parr[] = {arr1,arr2,arr3};
//	int i = 0;
//	for (i = 0;i < 3;i++)
//	{
//		int j = 0;
//		for (j = 0;j < 5;)
//		{
//			printf("%d", *(parr[i] + j));
//			j++;
//		}
//		printf("\n");
//	}	
//	return 0;
//}
//int main()
//{
//	int a[10] = { 1,2,3,4,5 };
//	int* p = a;
//	int(* p)[10] = &a;
//	return 0;
//}
//int main()
//{
//	char* a[5];
//	char*(* b)[5] = &a;
//	return 0;
//}
//int main()
//{
//	int a[10] = { 1,2,3,4,5 };
//	int(*p)[10] = &a;
//	int i = 0;
//	for (i = 0;i < 6;i++)
//	{
//		printf("%d ", (*p)[i]);
//		printf("%d ", *(*p + i));
//	}
//	return 0;
//}
//void test(int(*a)[10])
//{
//	printf("hehe");
//}
//int main()
//{
//	int a[10] = { 0 };
//	test(&a);
//	return 0;
//}
//void print1(int arr[3][5], int x, int y)
//{
//	;
//}
//void print2(int(*p)[5],int x,int y)
//{
//	int i = 0;
//	for (i = 0;i < x; i++)
//	{
//		int j = 0;
//		for (j = 0;j < y;j++)
//		{
//			printf("%d", *(*(p + i) + j));
//			printf("%d", (*(p + i))[j]); 
//		}
//		printf("\n");
//	}
//}
//int main()
//{
//	int arr[3][5] = { {1,2,3},{2,3,4},{3,4,5} };
//	print1(arr, 3, 5);
//	print2(arr, 3, 5);
//	return 0;
//}
//int main()
//{
//	int b = 0;
//	int a[10] = { 1,2,3 };
//	int* p = a;
//	printf("%d\n", p[1]);
//	printf("%d\n", *p);
//	printf("%d\n", a);
//}
