#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>

//struct stu
//{
//
//}s4,s5,s6;//全局变量
//struct stu s3;//全局变量
//struct 
//{
//	int a;
//	char c;
//}x;//   匿名
//int main()
//{
//	stu s1;  //局部变量
//
//	return 0;
//}
//struct Node
//{
//	int data;
//	struct Node* next;//自引用
//};
//typedef struct Node
//{
//	int data;
//}Node;
//int main()
//{
//	struct Node n1;
//	Node n2;
//	return 0;
//}
//结构体初始化
//struct T
//{
//	double weight;
//	short a;
//};
//struct S
//{
//	char c;
//	struct T st;
//	int a;
//	double d;
//	char arr[20];
//};
//int main()
//{
//	struct S s = { 'c',{55.6,30},100,3,14,(char)"hellow " };
//	printf("%c %d %lf %s\n", s.c, s.a, s.d, s.arr);
//	printf("%lf", s.st.weight);
//}
//struct s1
//{
//	char c;
//	int a;
//	char b;
//};
//struct s2
//{
//	char c;
//	char b;
//	int a;
//};
//int main()
//{
//	struct s1 s1 = { 0 };
//	struct s2 s2 = { 0 };
//	printf("%d,%d", sizeof(s1), sizeof(s2));//12,8
//	return 0;
//}
//struct S3
//{
//	double a;
//	char c;
//	int b;
//};
//int main()
//{
//	struct S3 s3= { 0 };
//	printf("%d\n", sizeof(s3));//16
//	return 0;
//}
//struct S3
//{
//	double a;
//	char c;
//	int b;
//};
//struct S4
//{
//	char c;
//	S3 s3;
//	double b;
//};
//int main()
//{
//	S4 s4 = { 0 };
//	printf("%d\n", sizeof(s4));//32  最大是8
//	return 0;
//}
//#pragma pack(4)//设置默认对齐位数
//struct S3
//{
//	char a;
//	double b;
//};//=12
//#pragma pack()//取消设置的默认对齐数
//#pragma pack()
//struct S3
//{
//	char a;
//	double b;
//};//=9
//#pragma pack()
//#include<stddef.h>
//struct s3
//{
//	char c;
//	int a;
//	double b;
//};
//int main()
//{
//	offsetof();//求结构体偏移量
//	printf("%d\n", offsetof(s3, c));//=0
//	printf("%d\n", offsetof(s3, a));//=4
//	printf("%d\n", offsetof(s3, b));//=8
//	return 0;
//}
//struct s3
//{
//	char c;
//	int a;
//	double b;
//};
//void Init(s3* ps)
//{
//	ps->a = 'w';
//	ps->a = 3;
//	ps->b = 3.14;
//}
//int main()
//{
//	s3 s = { 0 };
//	Init(&s);
//	return 0;
//}
