#define _CRT_SECURE_NO_WARNINGS 1
#include"game.h"
void Initbord(char bord[ROW][COL], int hang, int lie)
{
	int i = 0;
	int j = 0;
	for (i = 0;i < hang;i++)
	{
		for (j = 0;j < lie;j++)
		{
			bord[i][j] = ' ';
		}
	}
}
void Displaybord(char bord[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0;i < row;i++)
	{
		int j = 0;
		for (j = 0;j < col;j++)
		{
			//打印一行的数据
			printf(" %c ", bord[i][j]);
			if (j < col - 1)
			{
				printf("|");
			}
		}
			printf("\n");
			//打印分割行
			if (i < row - 1)
			{
				for (j = 0;j < col;j++)
				{
					printf("---");
					if (j < col - 1)
						printf("|");
				}
				printf("\n");
			}
		
	}
}
void Playermove(char bord[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	printf("玩家走,请输入坐标\n");
	while (1)
	{
		scanf("%d%d", &x, &y);
		if (x >= 1 && x <= row && y >= 1 && y <= col)
		{
			if (bord[x-1][y-1] == ' ')
			{
				bord[x-1][y-1] = '*';
				break;
			}
			else
			{
				printf("坐标被占用");
			}
		}
		else
		{
			printf("坐标非法\n");
		}
	}
}
void Computermove(char bord[ROW][COL], int row, int col)
{
	int X = 0;
	int Y = 0;
	printf("电脑走\n");
	while (1)
	{
		 X = rand() % row;
		 Y = rand() % col;
		if (bord[X][Y] == ' ')
		{
			bord[X][Y] = '#';
			break;
		}
	}
}
char Iswin(char bord[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0;i < row;i++)
	{
		if (bord[i][0] == bord[i][1] && bord[i][1] == bord[i][2] != ' ')
		{
			return bord[i][0];
		}
	}
	for (i = 0;i < col;i++)
	{
		if (bord[0][i] == bord[1][i] && bord[1][i] == bord[2][i] != ' ')
		{
			return bord[1][i];
		}
	}
	if(bord[0][0] == bord[1][1] && bord[1][1] == bord[2][2] != ' ')
		return bord[1][1];
	if (bord[1][1] == bord[0][2] && bord[1][1] == bord[2][0] != ' ')
		return bord[1][1];  
	if (1 == Isfull(bord,ROW,COL))
	{
		return 'Q';
	}
	return 'C';
}int Isfull(char bord[ROW][COL],int row,int col)
{
	int i = 0;
	int j = 0;
	for (i = 0;i < row;i++)
	{
		for (j = 0;j < col;j++)
		{
			if (bord[i][j] == ' ')
				return 0;
		}
	}
	return 1;
}
//test
#define _CRT_SECURE_NO_WARNINGS 1

#include<string.h>
#include"game.h"
void meau()
{
	printf("***********\n");
	printf("1.玩 0.退出\n");
	printf("***********\n");
}
void game()
{
	char ret = 0;
	//数组存放棋盘的信息
	char bord[ROW][COL] = { 0 };
	//初始化数组
	Initbord(bord,ROW, COL);
	//打印棋盘
	Displaybord(bord, ROW, COL);
	
	while (1)
	{//玩家下棋
		Playermove(bord, ROW, COL);
		Displaybord(bord, ROW, COL);
		ret=Iswin(bord,ROW,COL);
		if (ret != 'C')
		{
			break;
		}

     //电脑下棋
		Computermove(bord, ROW, COL);
		Displaybord(bord, ROW, COL);
		ret = Iswin(bord, ROW, COL);
		if (ret != 'C')
		{
			break;
		}
	}
	if (ret == '*')
	{
		printf("玩家赢\n");
	}
	else if(ret=='#')
	{
		printf("电脑赢\n");
	}
	else
	{
		printf("平局\n");
	}
}
void test()
{
	int input = 0;
	srand((unsigned int)time(NULL));
	do
	{
		meau();
		printf("请选择\n");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			printf("三子棋\n");
			game();
			break;
		case 0:
			printf("退出\n");
			break;
		default:
			printf("错误\n");
			break;
		}
	} while (input);
}
int main()
{
	test();
	return 0;
}
//game.h
#define ROW 3
#define COL 3
#include<stdio.h>
#include<stdlib.h>
#include<time.h>
//声明
void Initbord(char bord[ROW][COL],int row, int col);
void Displaybord(char bord[ROW][COL],int row,int col);
void Playermove(char bord[ROW][COL], int row, int col);
void Computermove(char bord[ROW][COL],int row,int col);
char Iswin(char bord[ROW][COL],int row,int col);
